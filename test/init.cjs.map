{"version":3,"file":"init.cjs","sources":["../src/Dre_Errors.mjs","../src/model/DreRegionBehaviorBaseType.mjs","../src/model/DreRegionBehaviorItemType.mjs","../src/init.mjs"],"sourcesContent":["import { MODULE_ID } from \"./constants.mjs\"\n\nclass DreErrorBase extends Error {\n    constructor(ErrorId=\"DRE_ERROR\",message,...params) {\n        super(message,params)\n        this.name = `${MODULE_ID}.${ErrorId}`\n    }\n}\n\nexport class InvalidFunctionArgument extends DreErrorBase {\n    static ID = \"INVALID_FUNC_ARG\"\n    static BASE_MSG = \"An argument provided to the function was invalid.\"\n    constructor(argName,argValue,reason,...params) {\n        super(\n            InvalidFunctionArgument.ID,\n            `${InvalidFunctionArgument.BASE_MSG} reason: ${reason} param: ${argName}, value: ${argValue}`,\n            params\n        )\n    }\n}","import {BEHAVIOR_PREFIX} from '../constants.mjs'\nimport {InvalidFunctionArgument} from '../Dre_Errors.mjs'\nconst { RegionBehaviorType } = foundry.data.regionBehaviors;\nconst { SetField, StringField, DocumentUUIDField } = foundry.data.fields;\n\n/**\n * @typedef {import(\"./foundryTypeDefs.mjs\").DataFieldOptions} DataFieldOptions\n * @typedef {import(\"./foundryTypeDefs.mjs\").SetField} SetField\n * @typedef {import(\"./foundryTypeDefs.mjs\").StringField} StringField\n */\n\n/**\n * The Base DRE Behavior for all DRE Behaviors.\n * \n * T\n * @abstract\n * @property {string} uuid           The Macro UUID.\n */\nexport default class DreRegionBehaviorBaseType extends RegionBehaviorType {\n  static BEHAVIOR_ID = 'BASE'\n  /** @override */\n  static LOCALIZATION_PREFIXES = [`${BEHAVIOR_PREFIX}.${this.BEHAVIOR_ID}`];\n  static events = {}\n  static EFFECT_SOURCE_CHOICES = [\n    \"ACTOR\",\n    \"ENVIRONMENT\",\n    \"PLACEABLE_OBJECT\"\n  ]\n\n  static defineSchema() {\n   \n    //Apparently in JS you inherit static functions too\n    return {\n      events : this._createEventsField()\n    }\n  }\n\n  // static _createEventsField() {\n  //   return super._createEventsField();\n  // }\n\n  /** @override */\n  async _handleRegionEvent(event) {\n    console.debug(`${LOCALIZATION_PREFIXES} _handleRegionEvent`,event);\n  }\n\n/**\n * \n * @param {Array<string>} optsArray A string array containing the options id's for the field\n * @param {string} localizationFieldPath The fully qualified localization path for this field that will appear before the choice keys.\n * @param {boolean} isRequired True if the field should be required. Overrides related key in fieldOptions if provided. Default: True\n * @param {bigint} defaultOptIndex The index of the default option contained in the array optsArray. Overrides related key in fieldOptions if provided.\n * @param {DataFieldOptions} fieldOptions Extra options. If a key contianed has an associated arg in this function which was explicitly passed it will override the related value in this object.\n * @return {StringField} A SetField containing the options required\n * @throws {InvalidFunctionArgument}\n */\n  static _createOptionsField(optsArray,localizationFieldPath,isRequired,defaultOptIndex,fieldOptions) {\n    if(!optsArray instanceof Array) {\n      throw new InvalidFunctionArgument(\"optsArray\",optsArray,\"Must be an instance of Array<T>.\");\n    }\n    else if(optsArray.length < 1) {\n      throw new InvalidFunctionArgument(\"optsArray\",optsArray,\"optsArray must have at least one element.\");\n    }\n    else if(defaultOptIndex && defaultOptIndex > -1 && optsArray.length <= defaultOptIndex) {\n      throw new InvalidFunctionArgument(\"defaultOptIndex\",defaultOptIndex,`Index ${defaultOptIndex} is not in optsArray.`)\n    }\n    else if(!localizationFieldPath) {\n      throw new InvalidFunctionArgument(\"localizationFieldPath\",localizationFieldPath,\"Must be a valid localization path.\")\n    }\n\n    let options = {\n      'required' : true,\n      'nullable' : false,\n      'initial' : optsArray[0]\n    }\n\n    let explicitOptions = {};\n\n    if(isRequired) {\n      explicitOptions['required'] = isRequired\n    }\n\n    if(defaultOptIndex) {\n      explicitOptions['initial'] = optsArray[defaultOptIndex]\n    }\n  \n    if(fieldOptions && fieldOptions.hasOwnProperty('choices')) {\n      console.warn(\"Choices key found on fieldOptions. Deleting choices and regenerating with given params.\")\n      delete fieldOptions.choices;\n    }\n\n    Object.assign(options,explicitOptions,fieldOptions)\n    options['choices'] = {}\n    \n    //Populate map of options to localization labels that represent them\n    for(const option of optsArray) {\n      options.choices[option] = `${localizationFieldPath}.${option}.label`\n    }\n    console.log(\"setField options: \",options)\n    return new StringField(options)\n  }\n}","import {BEHAVIOR_PREFIX} from '../constants.mjs'\nimport DreRegionBehaviorBaseType from './DreRegionBehaviorBaseType.mjs';\nconst { RegionBehaviorType } = foundry.data.regionBehaviors;\nconst { SetField, StringField, DocumentUUIDField } = foundry.data.fields;\nconst REGION_EVENTS = foundry.CONST.REGION_EVENTS\n\n\n/**\n * A Behavior that uses an item as the source of an effect. \n * \n * Targets will be affected regardless of item's range because\n * we will assume that any target in the region is valid unless\n * filtered out.\n *\n * @property {string} uuid           The Macro UUID.\n */\nexport default class DreRegionBehaviorItemType extends DreRegionBehaviorBaseType {\n  static BEHAVIOR_ID = 'ITEM'\n  /** @override */\n  static LOCALIZATION_PREFIXES = [`${BEHAVIOR_PREFIX}.${this.BEHAVIOR_ID}`];\n  static events = {}\n  static  ITEM_OPTION_CHOICES = [\n    \"USE_ITEM\",\n    \"USE_ITEM_COPY\"\n  ]\n\n\n  /** @override */\n  static defineSchema() {\n    const schOut = {\n      itemOpt : this._createOptionsField(this.ITEM_OPTION_CHOICES,`${this.LOCALIZATION_PREFIXES}.FIELDS.itemOpt`,true,0),\n      effectSource : this._createOptionsField(this.EFFECT_SOURCE_CHOICES,`${this.LOCALIZATION_PREFIXES}.FIELDS.effectSource`,true,0),\n      events: this._createEventsField(),\n      item: new DocumentUUIDField(\n        {\n          type: \"Item\",\n          validate : this.validateItem\n        }\n      )\n    };\n    console.log(`Schema Defined for ${DreRegionBehaviorItemType.LOCALIZATION_PREFIXES}:`,schOut)\n    return schOut;\n  }\n\n  /**\n   * Validates the item given against a criteria.\n   * @param {uuid} ItemUuid \n   * @returns {boolean} True if item is valid.\n   */\n  static validateItem(ItemUuid) {\n    console.log(\"Item Validator: \",ItemUuid);\n    return true\n  }\n\n  /* ---------------------------------------- */\n\n  /** @override */\n  async _handleRegionEvent(event) {\n    console.debug(`${LOCALIZATION_PREFIXES} _handleRegionEvent`,event);\n    if ( !this.uuid ) return;\n    const macro = await fromUuid(this.uuid);\n    if ( !(macro instanceof Macro) ) {\n      console.error(`${this.uuid} does not exist`);\n      return;\n    }\n    await macro.execute({scene: this.scene, region: this.region, behavior: this.behavior, event, actor: null, token: null});\n  }\n}","import {MODULE_ID} from \"./constants.mjs\";\nimport TestApp from './sheets/TestApp.mjs'\nimport DreRegionBehaviorBaseType from \"./model/DreRegionBehaviorBaseType.mjs\";\nimport DreRegionBehaviorItemType from \"./model/DreRegionBehaviorItemType.mjs\";\n\nconsole.log(\"Initilizing module: \",MODULE_ID);\n\nHooks.once(\"init\",() => {\n    console.log(\"Init code for \",MODULE_ID);\n    console.log(\"init this\",this)\n    console.log(\"config\",CONFIG)\n    console.log(\"check object to assign\",CONFIG?.RegionBehavior?.dataModels)\n    \n    //The keys of this field must match the TYPES key assigned to the class for localization to work on dialogue windows\n    Object.assign(CONFIG.RegionBehavior.dataModels,{\n        [`${MODULE_ID}.DreRegionBehaviorItemType`] : DreRegionBehaviorItemType\n    })\n});\n\nHooks.once(\"ready\",() => {\n    console.log(\"Ready code for the module \",MODULE_ID);\n    const testApp = new TestApp();\n    console.log(\"check object to assign\",CONFIG?.RegionBehavior?.dataModels)\n    testApp.render(true);\n});\n\nHooks.on('renderRegionBehaviorConfig',(app,html,data) =>{\n    if(!app.document.type.includes(`${MODULE_ID}.DreRegionBehavior`)) {\n        return;\n    }\n    console.log(\"DRE region behavior config rendered!\",app,html,data);\n    //todo: bind the instance listeners to the form. This should be delegated to a class that understands region behavior config with some type specific validation\n});"],"names":["DreErrorBase","ErrorId","message","params","MODULE_ID","_InvalidFunctionArgument","argName","argValue","reason","__publicField","InvalidFunctionArgument","RegionBehaviorType","SetField","StringField","DocumentUUIDField","_DreRegionBehaviorBaseType","event","optsArray","localizationFieldPath","isRequired","defaultOptIndex","fieldOptions","options","explicitOptions","option","BEHAVIOR_PREFIX","DreRegionBehaviorBaseType","_DreRegionBehaviorItemType","schOut","ItemUuid","macro","DreRegionBehaviorItemType","this","_a","testApp","TestApp","app","html","data"],"mappings":"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"}